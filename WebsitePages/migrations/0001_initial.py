# Generated by Django 4.2.7 on 2023-12-09 04:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SalesPerson', models.CharField(max_length=50)),
                ('Buyer', models.CharField(max_length=50)),
                ('PaymentMethod', models.CharField(choices=[('PYL', 'PayLah'), ('PNW', 'PayNow'), ('CSH', 'Cash'), ('BKT', 'BankTransfer')], max_length=3)),
                ('Date', models.DateField(auto_now_add=True, null=True, verbose_name='Date')),
                ('Time', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('quantity_sold', models.IntegerField(default=0)),
                ('total_price', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SalesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=50)),
                ('item_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DataStorageSalesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('data_storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebsitePages.datastorage')),
                ('sales_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebsitePages.salesitems')),
            ],
        ),
        migrations.AddField(
            model_name='datastorage',
            name='sales_items',
            field=models.ManyToManyField(through='WebsitePages.DataStorageSalesItems', to='WebsitePages.salesitems'),
        ),
    ]
